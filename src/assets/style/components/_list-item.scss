.list-item {
  position: relative;

  padding: 15px;
  @include flex-x(space-between, $wrap: wrap);

  filter: drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.25));
  border-radius: 10px;

  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2);

  overflow: hidden;
  cursor: pointer;
  opacity: 0;

  animation: fadeIn 450ms linear 1 forwards;

  transition: all 0.3s ease-in-out;

  @for $i from 1 to 13 {
    &:nth-child(12n + #{$i}) {
      animation-delay: 150ms * $i;
    }
  }

  $types: (
    "normal": $colour-normal,
    "fire": $colour-fire,
    "water": $colour-water,
    "electric": $colour-electric,
    "grass": $colour-grass,
    "ice": $colour-ice,
    "fighting": $colour-fighting,
    "poison": $colour-poison,
    "ground": $colour-ground,
    "flying": $colour-flying,
    "psychic": $colour-psychic,
    "bug": $colour-bug,
    "rock": $colour-rock,
    "ghost": $colour-ghost,
    "dragon": $colour-dragon,
    "dark": $colour-dark,
    "steel": $colour-steel,
    "fairy": $colour-fairy,
  );

  @mixin background {
    background-repeat: no-repeat;
    background-position: 25% 25%;
    background-size: auto 150%;
  }

  @each $type-primary, $colour-primary in $types {
    // If there is only one type.
    &--#{$type-primary} {
      background: url("/type-icons/#{$type-primary}.svg"),
        linear-gradient(
          225deg,
          darken($colour-primary, 15%) 25%,
          $colour-primary 75%,
          lighten($colour-primary, 15%)
        );
      @include background;
      transition: all 0.3s ease-in-out;

      .list-item__entry {
        color: $colour-primary;
      }
    }

    // If there is more than one type
    @each $type-secondary, $colour-secondary in $types {
      &--#{$type-primary}-#{$type-secondary} {
        background: url("/type-icons/#{$type-primary}.svg"),
          linear-gradient(225deg, $colour-primary, $colour-secondary);
        @include background;
        transition: all 0.3s ease-in-out;

        .list-item__entry {
          color: $colour-secondary;
        }
      }
    }
  }

  &__name {
    font-size: 22px;
    font-weight: 700;
    color: #fff;
    text-transform: capitalize;
  }

  &__id {
    font-size: 18px;
    font-weight: 700;
    color: #fff;
  }

  &__entry {
    position: absolute;
    bottom: 0;
    left: 0;

    padding: 5px 10px;
    border-top-right-radius: 5px;

    font-size: 12px;
    font-weight: 300;

    background: rgba(255, 255, 255, 0.85);
  }

  &__types {
    @include flex-x(center, center);
    margin: 5px auto;

    p {
      padding: 5px 10px;
      margin: 0 5px;
      border-radius: 7.5px;

      color: #fff;
      font-size: 16px;
      font-weight: 500;
      text-transform: capitalize;

      background: rgba(255, 255, 255, 0.25);
    }
  }

  img {
    position: relative;
    width: 100%;
    z-index: 2;

    transform: scale(1);
    transition: all 0.3s ease-in-out;
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;

    height: 100%;
    width: 100%;

    background: rgba(0, 0, 0, 0.1);
    opacity: 0;
    z-index: -1;
    transition: opacity 0.3s ease-in-out;
  }

  &:hover {
    box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease-in-out;

    img {
      transform: scale(1.1);
      transition: all 0.3s ease-in-out;
    }

    &::before {
      opacity: 1;
      transition: opacity 0.3s ease-in-out;
    }
  }

  @media screen and (min-width: 320px) {
    &__name,
    &__id {
      font-size: 18px;
    }

    &__types {
      padding-bottom: 15px;
    }
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}
